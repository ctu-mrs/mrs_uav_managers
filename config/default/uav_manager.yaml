version: "1.0.3.0"

null_tracker: "NullTracker"

# require gain or constraint manager running to takeoff?
require_gain_manager: true
require_constraint_manager: true

# periodically checks if max height was exceeded
# if so, retakes control and descends below it
max_height_checking:

  enabled: true
  rate: 10.0 # [Hz]
  safety_height_offset: 0.25 # how much lower to descend below the max height

# periodically checks if min height was exceeded
# if so, retakes control and ascends above it
min_height_checking:

  enabled: true
  rate: 10.0 # [Hz]
  min_height: 0.5 # [m]
  safety_height_offset: 0.25 # how much higher to ascend above the min height

takeoff:

  rate: 10 # [Hz]

  during_takeoff:
    controller: "MpcController"
    tracker: "LandoffTracker"

  after_takeoff:
    controller: "MpcController"
    tracker: "MpcTracker"

    pirouette: false

  takeoff_height: 1.5

landing:

  rate: 10 # [Hz]
  landing_tracker: "LandoffTracker"
  landing_controller: "MpcController"

  # those two must apply simultaneously
  landing_cutoff_mass_factor:  0.5 # how much light does the drone appear to be?
  landing_cutoff_timeout:  2.0 # [s] how long does the thrust has to be below the mass factor

  disarm: true

  # if the UAV height is available and
  # if the UAV higher than this:
  # it will first descend to this height
  # and then land slowly and safely
  descend_height: 2.0 # [m]

  tracking_tolerance:
    translation: 0.1 # [m]
    heading: 0.1 # [rad]

midair_activation:

  rate: 100 # [Hz]

  during_activation:
    controller: "MidairActivationController"
    tracker: "MidairActivationTracker"

  after_activation:
    controller: "Se3Controller"
    tracker: "MpcTracker"

flight_timer:

  enabled: false
  rate: 1 # [Hz]
  max_time: 10 # [s]

# detecting if desired thrust cross max threshold, triggers landing after that
max_thrust:

  enabled: true
  rate: 30 # [Hz]
  max_thrust: 0.80 # [-]
  eland_timeout: 1.0 # [s]
  ungrip_timeout: 0.5 # [s]

diagnostics:

  rate: 1.0 # [Hz]

scope_timer:

  enabled: false
  log_filename: "" # if empty, scope timers output to terminal; otherwise log to file
