<launch>

  <!-- args corresponding to environment variables -->
  <arg name="PROFILER" default="$(optenv PROFILER false)" />
  <arg name="UAV_NAME" default="$(optenv UAV_NAME)" />
  <arg name="LOGGER_DEBUG" default="$(optenv LOGGER_DEBUG false)" />

    <!-- other args -->
  <arg name="debug" default="true" />
  <arg name="profile" default="true" />
  <arg name="body_frame" default="fcu" />
  <arg name="standalone" default="true" />
  <arg name="bond" default="$(optenv BOND true)" />
  <arg name="nodelet_manager_name" default="$(optenv NODELET_MANAGER)" />

  <arg name="world_config" default="" />

  <env name="ROSCONSOLE_CONFIG_FILE" if="$(eval arg('LOGGER_DEBUG'))" value="$(find mrs_uav_managers)/config/debug_verbosity.yaml" />

  <arg     if="$(arg debug)" name="launch_prefix" value="debug_roslaunch" />
  <arg unless="$(arg debug)" name="launch_prefix" value="" />

  <arg     if="$(arg bond)" name="bond_suffix" value="" />
  <arg unless="$(arg bond)" name="bond_suffix" value="--no-bond" />

  <arg     if="$(eval arg('standalone') or arg('debug'))" name="nodelet" value="standalone" />
  <arg unless="$(eval arg('standalone') or arg('debug'))" name="nodelet" value="load" />
  <arg     if="$(eval arg('standalone') or arg('debug'))" name="nodelet_manager" value="" />
  <arg unless="$(eval arg('standalone') or arg('debug'))" name="nodelet_manager" value="$(arg nodelet_manager_name)" />


  <group ns="$(arg UAV_NAME)">
    <node pkg="nodelet" type="nodelet" name="safety_area_manager" args="$(arg nodelet) mrs_uav_managers/SafetyAreaManager $(arg nodelet_manager) $(arg bond_suffix)" output="screen" launch-prefix="$(arg launch_prefix)">

    <!-- Load the default param files -->
    <param name="private_config" value="$(find mrs_uav_managers)/config/private/safety_area_manager/safety_area_manager.yaml" />
    <param name="public_config" value="$(find mrs_uav_managers)/config/public/safety_area_manager/safety_area_manager.yaml" />

    <param name="enable_profiler" type="bool" value="$(arg PROFILER)" />
    <param name="uav_name" type="string" value="$(arg UAV_NAME)" />
    <param name="body_frame" type="string" value="$(arg body_frame)" />

    <param if="$(eval arg('world_config') == '')" name="world_config" value="" />
    <param if="$(eval not arg('world_config') == '' and arg('world_config')[0] == '/')" name="world_config" value="$(arg world_config)" />
    <param if="$(eval not arg('world_config') == '' and not arg('world_config')[0] == '/')" name="world_config" value="$(env PWD)/$(arg world_config)" />


    <!-- Subscribers -->
    <remap from="~hw_api_capabilities_in" to="hw_api/capabilities" />
    <remap from="~odometry_in" to="estimation_manager/odom_main" />
    <remap from="~control_manager_diagnostics_in" to="control_manager/diagnostics" />
    <remap from="~gnss_in" to="hw_api/gnss" />

    <!-- Publishers -->
    <remap from="~diagnostics_out" to="~diagnostics" />

    <!-- Services -->
    <remap from="~get_safety_zone_at_height_in" to="~get_safety_zone_at_height"/>
    <remap from="~point_in_safety_area_3d_in" to="~point_in_safety_area_3d"/>
    <remap from="~point_in_safety_area_2d_in" to="~point_in_safety_area_2d"/>
    <remap from="~path_in_safety_area_3d_in" to="~path_in_safety_area_3d"/>
    <remap from="~path_in_safety_area_2d_in" to="~path_in_safety_area_2d"/>
    <remap from="~set_use_safety_area_in" to="~set_use_safety_area"/>
    <remap from="~save_world_config_in" to="~save_world_config"/>
    <remap from="~load_world_config_in" to="~load_world_config"/>
    <remap from="~set_safety_area_in" to="~set_safety_area"/>
    <remap from="~set_world_config_in" to="~set_world_config"/>
    <remap from="~get_world_config_in" to="~get_world_config"/>
    <remap from="~add_obstacle_in" to="~add_obstacle"/>
    <remap from="~set_obstacle_in" to="~set_obstacle"/>
    <remap from="~get_max_z_in" to="~get_max_z"/>
    <remap from="~get_min_z_in" to="~get_min_z"/>
    <remap from="~get_use_in" to="~get_use"/>

    </node>
  </group>
</launch>
