<launch>

  <!-- args corresponding to environment variables -->
  <arg name="RUN_TYPE" default="$(optenv RUN_TYPE)" />
  <arg name="UAV_NAME" default="$(optenv UAV_NAME)" />
  <arg name="PROFILER" default="$(optenv PROFILER false)" />
  <arg name="LOGGER_DEBUG" default="$(optenv LOGGER_DEBUG false)" />

  <!-- other args -->
  <arg name="standalone" default="true" />
  <arg name="nodelet_manager_name" default="$(optenv NODELET_MANAGER)" />
  <arg name="debug" default="false" />
  <arg name="bond" default="$(optenv BOND true)" />

  <arg name="custom_config" default="" />
  <arg name="platform_config" default="" />
  <arg name="world_config" default="" />

  <env name="ROSCONSOLE_CONFIG_FILE" if="$(eval arg('LOGGER_DEBUG'))" value="$(find mrs_uav_managers)/config/debug_verbosity.yaml" />

  <arg if="$(eval arg('RUN_TYPE') == 'realworld')" name="UAV_MASS" default="$(env UAV_MASS)" />

  <arg name="g" default="9.81" />

  <arg     if="$(arg bond)" name="bond_suffix" value="" />
  <arg unless="$(arg bond)" name="bond_suffix" value="--no-bond" />

  <arg     if="$(eval arg('standalone') or arg('debug'))" name="nodelet" value="standalone" />
  <arg unless="$(eval arg('standalone') or arg('debug'))" name="nodelet" value="load" />
  <arg     if="$(eval arg('standalone') or arg('debug'))" name="nodelet_manager" value="" />
  <arg unless="$(eval arg('standalone') or arg('debug'))" name="nodelet_manager" value="$(arg nodelet_manager_name)" />

  <arg     if="$(arg debug)" name="launch_prefix" value="debug_roslaunch" />
  <arg unless="$(arg debug)" name="launch_prefix" value="" />

  <group ns="$(arg UAV_NAME)">

    <!-- UAV manager -->
    <node pkg="nodelet" type="nodelet" name="uav_manager" args="$(arg nodelet) mrs_uav_managers/UavManager $(arg nodelet_manager) $(arg bond_suffix)" output="screen" launch-prefix="$(arg launch_prefix)">

      <!-- Load the default param files -->
      <rosparam file="$(find mrs_uav_managers)/config/private/uav_manager.yaml" />
      <rosparam file="$(find mrs_uav_managers)/config/public/uav_manager.yaml" />

      <!-- Load a user param file -->
      <rosparam if="$(eval not arg('platform_config') == '')" file="$(arg platform_config)" />
      <rosparam if="$(eval not arg('custom_config') == '')" file="$(arg custom_config)" />
      <rosparam if="$(eval not arg('world_config') == '')" file="$(arg world_config)" />

      <param if="$(eval arg('RUN_TYPE') == 'realworld')" name="uav_mass" value="$(arg UAV_MASS)" />
      <param name="uav_name" value="$(arg UAV_NAME)" />
      <param name="enable_profiler" type="bool" value="$(arg PROFILER)" />
      <param name="g" value="$(arg g)" />

      <!-- Subscribers -->
      <remap from="~controller_diagnostics_in" to="control_manager/controller_diagnostics" />
      <remap from="~odometry_in" to="estimation_manager/odom_main" />
      <remap from="~odometry_diagnostics_in" to="estimation_manager/diagnostics" />
      <remap from="~control_manager_diagnostics_in" to="control_manager/diagnostics" />
      <remap from="~mass_estimate_in" to="control_manager/mass_estimate" />
      <remap from="~throttle_in" to="control_manager/throttle" />
      <remap from="~tracker_cmd_in" to="control_manager/tracker_cmd" />
      <remap from="~hw_api_status_in" to="hw_api/status" />
      <remap from="~hw_api_gnss_in" to="hw_api/gnss" />
      <remap from="~max_height_in" to="estimation_manager/max_flight_z_agl" />
      <remap from="~height_in" to="estimation_manager/height_agl" />
      <remap from="~gain_manager_diagnostics_in" to="gain_manager/diagnostics" />
      <remap from="~constraint_manager_diagnostics_in" to="constraint_manager/diagnostics" />
      <remap from="~hw_api_capabilities_in" to="hw_api/capabilities" />

      <!-- Publishers -->
      <remap from="~diagnostics_out" to="~diagnostics" />
      <remap from="~profiler" to="profiler" />

      <!-- Services -->
      <remap from="~takeoff_in" to="~takeoff" />
      <remap from="~land_in" to="~land" />
      <remap from="~land_home_in" to="~land_home" />
      <remap from="~land_there_in" to="~land_there" />
      <remap from="~takeoff_out" to="control_manager/landoff_tracker/takeoff" />
      <remap from="~land_out" to="control_manager/landoff_tracker/land" />
      <remap from="~eland_out" to="control_manager/eland" />
      <remap from="~ehover_out" to="control_manager/ehover" />
      <remap from="~switch_tracker_out" to="control_manager/switch_tracker" />
      <remap from="~switch_controller_out" to="control_manager/switch_controller" />
      <remap from="~toggle_control_output_out" to="control_manager/toggle_output" />
      <remap from="~emergency_reference_out" to="control_manager/emergency_reference" />
      <remap from="~enable_callbacks_out" to="control_manager/enable_callbacks" />
      <remap from="~arm_out" to="control_manager/arm" />
      <remap from="~pirouette_out" to="control_manager/pirouette" />
      <remap from="~set_odometry_callbacks_out" to="estimation_manager/toggle_service_callbacks" />
      <remap from="~ungrip_out" to="gripper/ungrip" />
      <remap from="~offboard_out" to="hw_api/offboard" />
      <remap from="~midair_activation_in" to="~midair_activation" />

    </node>

  </group>

</launch>
