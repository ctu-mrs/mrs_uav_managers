<launch>

  <!-- args corresponding to environment variables -->
  <arg name="UAV_NAME" default="$(optenv UAV_NAME)" />
  <arg name="PROFILER" default="$(optenv PROFILER false)" />
  <arg name="RUN_TYPE" default="$(optenv RUN_TYPE)" />

  <arg if="$(eval arg('RUN_TYPE') == 'simulation')" name="simulation" value="true" />
  <arg unless="$(eval arg('RUN_TYPE') == 'simulation')" name="simulation" value="false" />

  <arg name="custom_config" default="" />
  <arg name="platform_config" default="" />
  <arg name="world_config" default="" />
  <arg name="custom_config_active_estimators" default="" />

    <!-- other args -->
  <arg name="standalone" default="true" />
  <arg name="bond" default="$(optenv BOND true)" />
  <arg name="nodelet_manager_name" default="$(optenv NODELET_MANAGER)" />
  <arg name="debug" default="false" />

  <arg     if="$(arg bond)" name="bond_suffix" value="" />
  <arg unless="$(arg bond)" name="bond_suffix" value="--no-bond" />

  <arg     if="$(eval arg('standalone') or arg('debug'))" name="nodelet" value="standalone" />
  <arg unless="$(eval arg('standalone') or arg('debug'))" name="nodelet" value="load" />
  <arg     if="$(eval arg('standalone') or arg('debug'))" name="nodelet_manager" value="" />
  <arg unless="$(eval arg('standalone') or arg('debug'))" name="nodelet_manager" value="$(arg nodelet_manager_name)" />

  <arg     if="$(arg debug)" name="launch_prefix" value="debug_roslaunch" />
  <arg unless="$(arg debug)" name="launch_prefix" value="" />

  <arg name="fcu_frame_id" default="fcu" />

  <group ns="$(arg UAV_NAME)">

    <node pkg="nodelet" type="nodelet" name="transform_manager" args="$(arg nodelet) mrs_uav_managers/TransformManager $(arg nodelet_manager) $(arg bond_suffix)" output="screen" launch-prefix="$(arg launch_prefix)">

      <param name="enable_profiler" value="$(arg PROFILER)" />
      <param name="uav_name" value="$(arg UAV_NAME)" />

      <param name="private_config" value="$(find mrs_uav_managers)/config/private/transform_manager/transform_manager.yaml" />
      <param name="public_config" value="$(find mrs_uav_managers)/config/public/transform_manager/transform_manager.yaml" />
      <param name="estimators_config" value="$(find mrs_uav_managers)/config/public/active_estimators.yaml" />

      <!-- Load a user param file -->
      <param if="$(eval arg('platform_config') == '')" name="platform_config" value="" />
      <param if="$(eval not arg('platform_config') == '' and arg('platform_config')[0] == '/')" name="platform_config" value="$(arg platform_config)" />
      <param if="$(eval not arg('platform_config') == '' and not arg('platform_config')[0] == '/')" name="platform_config" value="$(env PWD)/$(arg platform_config)" />

      <param if="$(eval arg('custom_config') == '')" name="custom_config" value="" />
      <param if="$(eval not arg('custom_config') == '' and arg('custom_config')[0] == '/')" name="custom_config" value="$(arg custom_config)" />
      <param if="$(eval not arg('custom_config') == '' and not arg('custom_config')[0] == '/')" name="custom_config" value="$(env PWD)/$(arg custom_config)" />

      <param if="$(eval arg('world_config') == '')" name="world_config" value="" />
      <param if="$(eval not arg('world_config') == '' and arg('world_config')[0] == '/')" name="world_config" value="$(arg world_config)" />
      <param if="$(eval not arg('world_config') == '' and not arg('world_config')[0] == '/')" name="world_config" value="$(env PWD)/$(arg world_config)" />

      <!-- Subscribers -->
      <remap from="~uav_state_in" to="estimation_manager/uav_state" />
      <remap from="~height_agl_in" to="estimation_manager/height_agl" />
      <remap from="~orientation_in" to="hw_api/orientation" />
      <remap from="~gnss_in" to="hw_api/gnss" />
      <remap from="~rtk_gps_in" to="hw_api/rtk" />
      <remap from="~altitude_amsl_in" to="hw_api/altitude" />

      <!-- Publishers -->
      <remap from="~profiler" to="profiler" />
      <remap from="~map_delay_out" to="~map_delay" />

    </node>

    <!-- RTK antenna to FCU TF (TODO: should be published by hw_api) -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="fcu_to_rtk_antenna" args="0.0 0.0 0.20 0 0 0 $(arg UAV_NAME)/$(arg fcu_frame_id) $(arg UAV_NAME)/rtk_antenna" />

  </group>

</launch>
