<launch>

  <!-- args corresponding to environment variables -->
  <arg name="UAV_NAME" default="$(optenv UAV_NAME)" />
  <arg name="PROFILER" default="$(optenv PROFILER false)" />
  <arg name="RUN_TYPE" default="$(optenv RUN_TYPE)" />

  <arg if="$(eval arg('RUN_TYPE') == 'simulation')" name="simulation" value="true" />
  <arg unless="$(eval arg('RUN_TYPE') == 'simulation')" name="simulation" value="false" />

  <arg name="custom_config" default="" />
  <arg name="platform_config" default="" />
  <arg name="world_config" default="" />

    <!-- other args -->
  <arg name="standalone" default="true" />
  <arg name="nodelet_manager_name" default="$(optenv NODELET_MANAGER)" />
  <arg name="bond" default="$(optenv BOND true)" />
  <arg name="debug" default="false" />

  <arg     if="$(arg bond)" name="bond_suffix" value="" />
  <arg unless="$(arg bond)" name="bond_suffix" value="--no-bond" />

  <arg     if="$(eval arg('standalone') or arg('debug'))" name="nodelet" value="standalone" />
  <arg unless="$(eval arg('standalone') or arg('debug'))" name="nodelet" value="load" />
  <arg     if="$(eval arg('standalone') or arg('debug'))" name="nodelet_manager" value="" />
  <arg unless="$(eval arg('standalone') or arg('debug'))" name="nodelet_manager" value="$(arg nodelet_manager_name)" />

  <arg     if="$(arg debug)" name="launch_prefix" value="debug_roslaunch" />
  <arg unless="$(eval arg('debug'))" name="launch_prefix" value="" />

  <group ns="$(arg UAV_NAME)">

    <node pkg="nodelet" type="nodelet" name="estimation_manager" args="$(arg nodelet) mrs_uav_managers/EstimationManager $(arg nodelet_manager) $(arg bond_suffix)" output="screen" launch-prefix="$(arg launch_prefix)">

      <param name="enable_profiler" value="$(arg PROFILER)" />
      <param name="uav_name" value="$(arg UAV_NAME)" />

      <!-- Load the default param files -->
      <param name="private_config" value="$(find mrs_uav_managers)/config/private/estimation_manager/estimation_manager.yaml" />
      <param name="public_config" value="$(find mrs_uav_managers)/config/public/estimation_manager/estimation_manager.yaml" />
      <param name="uav_manager_config" value="$(find mrs_uav_managers)/config/public/uav_manager.yaml" />
      <param name="estimators_config" value="$(find mrs_uav_managers)/config/private/estimators.yaml" />
      <param name="active_estimators_config" value="$(find mrs_uav_managers)/config/public/active_estimators.yaml" />

      <param if="$(eval arg('platform_config') == '')" name="platform_config" value="" />
      <param if="$(eval not arg('platform_config') == '' and arg('platform_config')[0] == '/')" name="platform_config" value="$(arg platform_config)" />
      <param if="$(eval not arg('platform_config') == '' and not arg('platform_config')[0] == '/')" name="platform_config" value="$(env PWD)/$(arg platform_config)" />

      <param if="$(eval arg('custom_config') == '')" name="custom_config" value="" />
      <param if="$(eval not arg('custom_config') == '' and arg('custom_config')[0] == '/')" name="custom_config" value="$(arg custom_config)" />
      <param if="$(eval not arg('custom_config') == '' and not arg('custom_config')[0] == '/')" name="custom_config" value="$(env PWD)/$(arg custom_config)" />

      <param if="$(eval arg('world_config') == '')" name="world_config" value="" />
      <param if="$(eval not arg('world_config') == '' and arg('world_config')[0] == '/')" name="world_config" value="$(arg world_config)" />
      <param if="$(eval not arg('world_config') == '' and not arg('world_config')[0] == '/')" name="world_config" value="$(env PWD)/$(arg world_config)" />

      <!-- common -->
      <remap from="~control_input_in" to="control_manager/estimator_input" />
      <remap from="~imu_in" to="hw_api/imu" />
      <remap from="~hw_api_capabilities_in" to="hw_api/capabilities" />
      <remap from="~control_manager_diagnostics_in" to="control_manager/diagnostics" />
      <remap from="~control_reference_in" to="control_manager/control_reference" />
      <remap from="~controller_diagnostics_in" to="control_manager/controller_diagnostics" />

      <remap from="~profiler" to="profiler" />
      <remap from="~odom_main_out" to="~odom_main" />
      <remap from="~innovation_out" to="~innovation" />
      <remap from="~uav_state_out" to="~uav_state" />
      <remap from="~diagnostics_out" to="~diagnostics" />
      <remap from="~max_flight_z_agl_out" to="~max_flight_z_agl" />
      <remap from="~height_agl_out" to="~height_agl" />

      <remap from="~change_estimator_in" to="~change_estimator" />
      <remap from="~reset_estimator_in" to="~reset_estimator" />
      <remap from="~toggle_service_callbacks_in" to="~toggle_service_callbacks" />

      <remap from="~failsafe_out" to="control_manager/failsafe" />

    </node>

  </group>

</launch>
